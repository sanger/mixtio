name: Ruby

env:
  TZ: Europe/London

on:
  - push
  - pull_request

jobs:
  test:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: mixtio_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      RAILS_ENV: test
      DB_PORT: 3306
      DB_PASSWORD: root

    steps:
    - name: Start MySQL
      run: sudo service mysql start
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        cache-version: 1
        bundler-cache: true # Runs bundle install and caches gems. See the ruby_test.yml
                            # example if you need more control over bundler.
    - name: Set up environment
      run: |
        bundle exec rails db:setup

    - name: Run tests
      run: bundle exec rspec

  snyk_test:
    name: Run snyk tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master #Pre-created container
        continue-on-error: true #To make sure that SARIF upload gets called and also not to block CI run on snyk test failure
        with:
          command: code test
          args: --severity-threshold=high --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  snyk_monitor:
    name: Run snyk monitor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master #Pre-created container
        with:
          command: monitor #monitor
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
